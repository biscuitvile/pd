#N canvas 121 146 1449 735 12;
#X obj -243 453 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg -245 242 tempo \$1;
#X msg -362 319 \; pd dsp 1;
#X obj -363 231 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj -245 277 abl_link~ 1 0 4 134;
#X floatatom -245 214 5 0 0 2 tempo - - 0;
#X msg -363 252 connect \$1;
#X obj -244 415 sel 0;
#X obj -126 539 loadbang;
#X obj -174 415 loadbang;
#X msg -174 441 100;
#X obj -174 469 f;
#X obj -192 497 +;
#X floatatom -180 561 5 0 0 0 - - - 0;
#X msg 57 279 start;
#X msg 110 280 stop;
#X obj 172 156 tgl 19 0 \$0-rec \$0-rec-inlet empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 172 186 sel 1;
#X obj 173 250 timer;
#X obj 173 279 t f f;
#X obj 173 312 expr 1000 / $f1;
#X obj 173 346 phasor~;
#X obj 208 378 * 44.1;
#X obj 173 379 *~;
#X obj 174 211 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 205 209 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 339 325 soundfiler;
#X obj 291 183 t b b b;
#X msg -134 496 100;
#X msg 680 273 reset;
#X msg 680 299 resize 3.969e+06 \, const 0;
#X obj 173 132 bng 19 250 50 0 \$0-clear \$0-clear-inlet empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 634 248 t b b b;
#X text 124 133 clear;
#X msg 317 410 resize \$1;
#N canvas 237 262 561 492 khTimestretch 0;
#X floatatom 7 236 5 0 0 0 - - - 0;
#N canvas 0 40 1366 686 fft-analysis 0;
#X obj 51 477 *~;
#X obj 18 477 *~;
#X obj 18 499 -~;
#X obj 167 475 *~;
#X obj 136 475 *~;
#X obj 136 497 +~;
#X obj 109 193 *~;
#X obj 78 193 *~;
#X obj 50 193 *~;
#X obj 19 193 *~;
#X obj 19 218 +~;
#X obj 127 379 *~;
#X obj 20 622 *~;
#X obj 238 430 rfft~;
#X obj 108 161 rfft~;
#X obj 19 564 rifft~;
#X obj 21 646 outlet~;
#X obj 97 379 *~;
#X obj 97 401 +~;
#X obj 124 218 -~;
#X obj 18 431 *~;
#X obj 51 432 *~;
#X obj 127 622 r window-size;
#X obj 426 595 r window-size;
#X obj 426 644 block~;
#X obj 19 349 +~ 1e-15;
#X obj 19 598 *~;
#X obj 52 598 tabreceive~ \$0-hann;
#X obj 127 643 expr 2/(3*$f1);
#X obj 591 563 loadbang;
#X msg 426 619 set \$1 4;
#X obj 97 425 q8_rsqrt~;
#N canvas 17 0 1349 686 read-windows 0;
#X obj 18 693 *~;
#X obj 364 448 r window-size;
#X obj 156 300 f;
#X obj 102 91 r window-size;
#X obj 102 139 /;
#X obj 195 695 *~;
#X obj 156 255 bang~;
#X obj 17 551 line~;
#X obj 102 164 * 1000;
#X obj 288 224 r speed;
#X obj 198 302 +;
#X obj 288 272 *;
#X obj 183 470 +;
#X obj 143 446 t f f;
#X msg 17 523 \$1 \, \$2 \$3;
#X obj 17 496 pack 0 0 0;
#X obj 178 371 / 1000;
#X obj 156 394 *;
#X text 188 394 reading location (samples);
#X obj 51 597 / 4;
#X obj 288 245 * 0.01;
#X floatatom 364 498 7 0 0 0 - - - 0;
#X obj 19 719 outlet~;
#X obj 195 720 outlet~;
#X obj 218 664 tabreceive~ \$0-hann;
#X msg 803 409 0;
#X obj 803 432 s speed;
#X obj 768 508 r speed;
#X msg 768 532 set \$1;
#X obj 768 557 s speed-set;
#X text 432 498 stretched window size (samples);
#X obj 877 507 r transpo;
#X msg 877 533 set \$1;
#X obj 877 558 s transpo-set;
#X obj 17 637 tabread4~ \$0-sample;
#X obj 194 637 tabread4~ \$0-sample;
#X obj 178 347 r \$0-insamprate;
#X obj 528 586 r rewind;
#X msg 528 744 \; location \$1;
#X floatatom 111 187 5 0 0 0 - - - 0;
#X obj 102 115 t f b;
#X obj 142 139 samplerate~;
#X obj 102 208 / 4;
#X obj 193 420 / 2;
#X obj 156 420 -;
#X text 229 417 back up 1/2 window;
#X obj 16 597 -~;
#X text 43 6 Read two windows out of the recorded sample \, one 1/4 ahead of the other. The mid point of the front window is specified by "location". If "speed" is nonzero \, "location" automatically precesses.;
#X obj 528 720 * -0.5;
#X text 91 587 "back" window 1/4 cycle behind "front" one;
#X text 137 205 computation period (msec) for overlap of 4;
#X text 164 186 msec in a window;
#X obj 528 666 /;
#X obj 528 691 * 1000;
#X obj 528 642 t f b;
#X obj 568 666 samplerate~;
#X obj 528 619 f;
#X msg 845 711 \; rewind bang \; speed \$1;
#X obj 845 684 r auto;
#X obj 730 685 r no-detune;
#X msg 730 707 \; detune 0;
#X text 321 280 loop to precess the location according;
#X text 320 296 to the "speed" parameter.;
#X text 756 462 reflect control changes;
#X text 756 479 in main window.;
#X text 754 344 setting location by hand;
#X text 752 362 sets speed to zero.;
#X text 760 653 misc controls;
#X text 496 527 "rewind" control takes us;
#X text 499 545 to a location depending on;
#X text 499 564 stretched window size.;
#X text 494 312 desired transposition and sample;
#X text 494 329 rate correction for soundfile;
#X obj 803 386 r location;
#X obj 178 276 r location;
#X obj 364 474 * 1;
#X connect 0 0 22 0;
#X connect 1 0 75 0;
#X connect 2 0 10 0;
#X connect 2 0 17 0;
#X connect 3 0 40 0;
#X connect 4 0 8 0;
#X connect 5 0 23 0;
#X connect 6 0 2 0;
#X connect 7 0 46 0;
#X connect 7 0 35 0;
#X connect 8 0 39 0;
#X connect 8 0 42 0;
#X connect 9 0 20 0;
#X connect 10 0 2 1;
#X connect 11 0 10 1;
#X connect 12 0 15 1;
#X connect 13 0 15 0;
#X connect 13 1 12 0;
#X connect 14 0 7 0;
#X connect 15 0 14 0;
#X connect 16 0 17 1;
#X connect 17 0 44 0;
#X connect 19 0 46 1;
#X connect 20 0 11 0;
#X connect 21 0 19 0;
#X connect 21 0 12 1;
#X connect 21 0 43 0;
#X connect 21 0 56 1;
#X connect 24 0 5 1;
#X connect 24 0 0 1;
#X connect 25 0 26 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 34 0 0 0;
#X connect 35 0 5 0;
#X connect 36 0 16 0;
#X connect 37 0 56 0;
#X connect 40 0 4 0;
#X connect 40 1 41 0;
#X connect 41 0 4 1;
#X connect 42 0 15 2;
#X connect 42 0 11 1;
#X connect 43 0 44 1;
#X connect 44 0 13 0;
#X connect 46 0 34 0;
#X connect 48 0 38 0;
#X connect 52 0 53 0;
#X connect 53 0 48 0;
#X connect 54 0 52 0;
#X connect 54 1 55 0;
#X connect 55 0 52 1;
#X connect 56 0 54 0;
#X connect 58 0 57 0;
#X connect 59 0 60 0;
#X connect 73 0 25 0;
#X connect 74 0 2 1;
#X connect 75 0 21 0;
#X restore 109 133 pd read-windows;
#X text 272 5 recall previous output amplitude. Its phase will be added to the phase difference we measure from two windows in the the recorded sound.;
#X obj 121 69 *~;
#X obj 89 69 *~;
#X obj 89 91 +~;
#X obj 159 94 q8_rsqrt~;
#X obj 159 71 +~ 1e-20;
#X obj 73 119 *~;
#X obj 19 118 *~;
#X obj 29 245 lrshift~ 1;
#X obj 24 269 lrshift~ -1;
#X obj 141 245 lrshift~ 1;
#X obj 133 269 lrshift~ -1;
#X obj 19 325 +~;
#X obj 125 331 +~;
#X text 247 66 divide by the magnitude to make a unit-magnitude complex amplitude (phase only). The 1e-20 is to prevent overflows. q8_rsqrt~ is reciprocal square root.;
#X text 247 165 Take FT of the window in back. Multiply its conjugate by the normalized previous output. The result has the magnitude of the input sound and phase (previous output phase) minus (back window phase).;
#X text 249 370 Normalize again \, this time taking care to salt each channel with 1e-15 so that we get a unit complex number even if everything was zero heretofore.;
#X text 288 427 Now take the FT of the forward window and multiply it by the unit complex number from above. The magnitude will be that of the forward window and the phase will be the previous output phase plus the phase difference between the two analysis windows -- except that if "lock" is on \, they will be modified to agree progressively better with the inter-channel phase relationships of the input.;
#X text 249 242 If "lock" is on \, encourage neighboring channels to stay in phase by adding the two neighboring complex amplitudes. The result will tend toward the channel with the strongest amplitude. If the phase relationships between channels in the output and those in the input are in parallel \, then neighboring channels of the quotient will all have the same phase and this will not change any phases. (lrshift shifts the signal to the left or right depending on its argument.);
#X text 387 560 'set' message to block;
#X text 390 577 allows variable size;
#X text 259 126 Read two windows \, one 1/4 length behind the other \, of the input sound \, with Hann window function (see inside).;
#X obj 35 300 *~ 1;
#X obj 159 312 *~ 1;
#X msg 591 589 \; window-size 512 \; transpo 0 \; rewind bang;
#X obj 20 8 tabreceive~ \$0-prev-real;
#X obj 73 29 tabreceive~ \$0-prev-imag;
#X obj 137 543 tabsend~ \$0-prev-imag;
#X obj 136 567 tabsend~ \$0-prev-real;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 15 0;
#X connect 2 0 61 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 15 1;
#X connect 5 0 60 0;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 42 0;
#X connect 10 0 41 0;
#X connect 10 0 45 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 26 0;
#X connect 17 0 18 0;
#X connect 18 0 31 0;
#X connect 19 0 43 0;
#X connect 19 0 44 0;
#X connect 19 0 46 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 22 0 28 0;
#X connect 23 0 30 0;
#X connect 25 0 17 1;
#X connect 25 0 17 0;
#X connect 25 0 20 0;
#X connect 26 0 12 0;
#X connect 27 0 26 1;
#X connect 28 0 12 1;
#X connect 29 0 57 0;
#X connect 30 0 24 0;
#X connect 31 0 20 1;
#X connect 31 0 21 1;
#X connect 32 0 14 0;
#X connect 32 1 13 0;
#X connect 34 0 36 1;
#X connect 35 0 36 0;
#X connect 36 0 38 0;
#X connect 37 0 39 1;
#X connect 37 0 40 1;
#X connect 38 0 37 0;
#X connect 39 0 8 0;
#X connect 39 0 7 0;
#X connect 40 0 9 0;
#X connect 40 0 6 0;
#X connect 41 0 55 0;
#X connect 42 0 55 0;
#X connect 43 0 56 0;
#X connect 44 0 56 0;
#X connect 45 0 25 0;
#X connect 46 0 11 0;
#X connect 46 0 11 1;
#X connect 46 0 21 0;
#X connect 55 0 45 1;
#X connect 56 0 46 1;
#X connect 58 0 35 1;
#X connect 58 0 35 0;
#X connect 58 0 40 0;
#X connect 59 0 34 1;
#X connect 59 0 34 0;
#X connect 59 0 39 0;
#X restore 105 234 pd fft-analysis;
#N canvas 260 0 647 730 phase-tables 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-prev-imag 4096 float 0;
#X coords 0 1000 4096 -1000 400 300 1;
#X restore 169 326 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-prev-real 4096 float 0;
#X coords 0 500 4096 -500 400 300 1;
#X restore 170 17 graph;
#X restore 251 232 pd phase-tables;
#N canvas 0 110 565 454 hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 512 float 0;
#X coords 0 1 511 0 300 100 1;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 37 88 r window-size;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 38 251 s window-sec;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 177 252 s window-hz;
#X obj 49 201 * 1000;
#X obj 49 228 s window-msec;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X obj 330 105 r window-hz;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and constants window-hz (fundamental frequency of analysis) \, window-sec and window-msec (analysis window size in seconds and msec).;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 7 0 9 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 14 1 7 0;
#X connect 14 2 15 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 1 1;
#X connect 19 0 1 0;
#X connect 19 1 4 0;
#X connect 19 1 18 0;
#X restore 251 256 pd hann-window;
#X obj 7 260 s speed;
#X obj 39 158 bng 15 250 50 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000;
#X obj 39 180 s rewind;
#X obj 105 258 outlet~;
#X obj 18 209 inlet;
#N canvas 610 77 694 358 insample 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-sample 3.969e+06 float 0;
#X coords 0 1 3.969e+06 -1 400 150 1;
#X restore 281 38 graph;
#X obj 28 36 r read-sample;
#X obj 28 87 unpack s f;
#X obj 28 197 soundfiler;
#X obj 28 113 t s b;
#X obj 84 112 symbol \$0-sample;
#X obj 28 148 pack s s;
#X msg 28 173 read -resize \$1 \$2;
#X obj 83 59 44100;
#X obj 28 60 t a b;
#X obj 38 221 s \$0-samplength;
#X obj 125 87 s \$0-insamprate;
#X obj 28 260 /;
#X obj 28 284 * 1000;
#X obj 28 307 s \$0-samp-msec;
#X obj 66 260 r \$0-insamprate;
#X obj 302 236 r filename;
#X obj 302 263 pack s;
#X msg 302 290 \; read-sample \$1;
#X connect 1 0 9 0;
#X connect 2 0 4 0;
#X connect 2 1 11 0;
#X connect 3 0 10 0;
#X connect 3 0 12 0;
#X connect 4 0 6 0;
#X connect 4 1 5 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 7 0 3 0;
#X connect 8 0 11 0;
#X connect 9 0 2 0;
#X connect 9 1 8 0;
#X connect 12 0 13 0;
#X connect 13 0 14 0;
#X connect 15 0 12 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X restore 252 208 pd insample;
#X obj 7 133 t b b;
#X obj 153 116 inlet;
#X obj 153 142 s filename;
#X obj 7 109 inlet;
#X text 4 302 This is a timestretch abstraction derived from tweaking;
#X text 5 321 the I07.phase.vocoder tutorial.;
#X text 9 21 First inlet: bang to play sample;
#X text 5 343 Keith Hennigan \, June '12;
#X text 7 44 Second inlet: timestretch as percentage %;
#X text 7 66 Third inlet: filename of sample or loop;
#X text 9 -24 Source: https://forum.pdpatchrepo.info/topic/6403/timestretch-abstractions/8, f 69;
#X connect 0 0 4 0;
#X connect 1 0 7 0;
#X connect 5 0 6 0;
#X connect 8 0 0 0;
#X connect 10 0 0 0;
#X connect 10 1 5 0;
#X connect 11 0 12 0;
#X connect 13 0 10 0;
#X restore -234 591 pd khTimestretch;
#X obj -245 145 loadbang;
#X msg -245 169 120;
#N canvas 294 241 601 547 percentage-change 0;
#X floatatom 115 67 5 0 0 0 - - - 0;
#X obj 130 176 -;
#X obj 130 206 f;
#X floatatom 130 236 5 0 0 0 - - - 0;
#X obj 357 161 t f f;
#X obj 362 207 +;
#X obj 362 238 * 0.5;
#X floatatom 362 269 5 0 0 0 - - - 0;
#X floatatom 356 124 5 0 0 0 - - - 0;
#X obj 115 91 t f f f;
#X text 411 269 average value;
#X obj 320 434 /;
#X obj 320 463 * 100;
#X floatatom 320 491 5 0 0 0 - - - 0;
#X msg 402 472 100;
#X msg 115 37 120;
#X obj 115 11 loadbang;
#X obj 402 446 loadbang;
#X text 368 497 percentage changed;
#X text 171 236 change value;
#X obj 11 9 inlet;
#X obj 320 518 outlet;
#X connect 0 0 9 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 4 0 5 1;
#X connect 4 1 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 11 1;
#X connect 8 0 4 0;
#X connect 9 0 1 1;
#X connect 9 1 1 0;
#X connect 9 2 8 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 21 0;
#X connect 14 0 13 0;
#X connect 15 0 0 0;
#X connect 16 0 15 0;
#X connect 17 0 14 0;
#X connect 20 0 0 0;
#X restore -191 335 pd percentage-change;
#X floatatom -191 309 5 0 0 0 - - - 0;
#X floatatom -191 360 5 0 0 0 - - - 0;
#X obj 314 239 s reload-looper;
#X obj -53 540 r reload-looper;
#X obj 291 213 s reset-stretch;
#X obj -134 471 r reset-stretch;
#X obj 636 355 s reload-looper;
#X obj 12 244 *~ 1;
#X floatatom 37 218 5 0 0 0 - - - 0;
#X obj -363 204 loadbang;
#X obj -362 290 loadbang;
#X obj -235 695 outlet~;
#X obj 12 46 inlet~;
#X text 130 156 rec, f 4;
#X obj 635 193 r \$0-clear;
#X msg -126 565 symbol ../audio/looper.wav;
#X obj 766 191 table \$0-looper 144000;
#X obj 13 311 tabwrite~ \$0-looper;
#X obj 173 411 tabread4~ \$0-looper;
#X obj 679 327 s \$0-looper;
#X obj 338 269 f \$0;
#X msg 339 295 write -wave ../audio/looper.wav \$1-looper;
#X obj 315 14 inlet;
#X obj 315 41 route rec clear;
#X obj 420 70 s \$0-clear-inlet;
#X obj 315 70 s \$0-rec-inlet;
#X connect 0 0 35 0;
#X connect 1 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 7 0;
#X connect 4 3 39 0;
#X connect 5 0 1 0;
#X connect 6 0 4 0;
#X connect 7 0 0 0;
#X connect 8 0 54 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 12 1;
#X connect 12 0 13 0;
#X connect 13 0 35 1;
#X connect 14 0 56 0;
#X connect 15 0 56 0;
#X connect 16 0 17 0;
#X connect 17 0 24 0;
#X connect 17 1 25 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 19 1 22 0;
#X connect 20 0 21 0;
#X connect 21 0 23 0;
#X connect 22 0 23 1;
#X connect 22 0 34 0;
#X connect 23 0 57 0;
#X connect 24 0 18 0;
#X connect 24 0 14 0;
#X connect 25 0 18 1;
#X connect 25 0 15 0;
#X connect 25 0 27 0;
#X connect 27 0 43 0;
#X connect 27 1 41 0;
#X connect 27 2 59 0;
#X connect 28 0 13 0;
#X connect 29 0 30 0;
#X connect 30 0 58 0;
#X connect 32 0 45 0;
#X connect 32 1 59 0;
#X connect 32 2 29 0;
#X connect 34 0 58 0;
#X connect 35 0 50 0;
#X connect 36 0 37 0;
#X connect 37 0 5 0;
#X connect 38 0 40 0;
#X connect 39 0 38 0;
#X connect 40 0 12 0;
#X connect 42 0 54 0;
#X connect 44 0 28 0;
#X connect 46 0 56 0;
#X connect 47 0 46 1;
#X connect 48 0 3 0;
#X connect 49 0 2 0;
#X connect 51 0 46 0;
#X connect 53 0 32 0;
#X connect 54 0 35 2;
#X connect 59 0 60 0;
#X connect 60 0 26 0;
#X connect 61 0 62 0;
#X connect 62 0 64 0;
#X connect 62 1 63 0;
#X coords 0 -1 1 1 100 80 1 100 100;
